//!TestZeroLengthSelection
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    void me/*$*//*$$*/mber()
    {
        return;
    }
};
//=
class A {
    void member();
};

inline void A::member()
{
    return;
}
//!TestSubstringSelection
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    void m/*$*/e/*$$*/mber()
    {
        return;
    }
};
//=
class A {
    void member();
};

inline void A::member()
{
    return;
}
//!TestBodySelection
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    void member()
    {
        r/*$*//*$$*/eturn;
    }
};
//=
class A {
    void member();
};

inline void A::member()
{
    return;
}
//!TestBodySelectionWithConfusingName
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    void member()
    {
        int /*$*/abcd/*$$*/ = 42;
        return;
    }
};
//=
class A {
    void member();
};

inline void A::member()
{
    int abcd = 42;
    return;
}
//!TestLeftBorderSelection
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    /*$*//*$$*/void member()
    {
        return;
    }
};
//=
class A {
    void member();
};

inline void A::member()
{
    return;
}
//!TestRightBorderSelection
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    void member()
    {
        return;
    }/*$*//*$$*/
};
//=
class A {
    void member();
};

inline void A::member()
{
    return;
}
//!TestOverlappingSelection
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    vo/*$*/id member()
    {
        ret/*$$*/urn;
    }
};
//=
class A {
    void member();
};

inline void A::member()
{
    return;
}
//!TestDeclarationFullySelected
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
class A {
    void /*$*/member/*$$*/();
};
//=
class A {
    void member()
    {
        return;
    }
};
//@A.cpp
#include "A.h"
void A::member()
{
    return;
}
//=
#include "A.h"
//!TestCppFileSelectionFullyQualified
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.cpp
//@A.h
#include <iostream>
#include <exception>

namespace N {
    class A {
        void foo();
    };
}

//=
#include <iostream>
#include <exception>

namespace N {
    class A {
        void foo()
        {
            return;
        }
    };
}

//@A.cpp
#include "A.h"

int main() {
	return 0;
}

void /*$*/N::A::foo/*$$*/()
{
    return;
}
//=
#include "A.h"

int main() {
	return 0;
}

//!TestCppFileSelectionNameOnly
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.cpp
//@A.h
#include <iostream>
#include <exception>

namespace N {
    class A {
        void foo();
    };
}

//=
#include <iostream>
#include <exception>

namespace N {
    class A {
        void foo()
        {
            return;
        }
    };
}

//@A.cpp
#include "A.h"

int main() {
	return 0;
}

void N::A::/*$*/foo/*$$*/()
{
    return;
}
//=
#include "A.h"

int main() {
	return 0;
}

