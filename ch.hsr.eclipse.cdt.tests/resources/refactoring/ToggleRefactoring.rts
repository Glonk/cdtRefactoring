//!TestSimpleFunctionInClassToInHeader
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
#include <iostream>

class A {
	int /*$*/function()/*$$*/
	{
		return 0;
	}
};
//=
#include <iostream>

class A {
	int function();
};

inline int A::function()
{
    return 0;
}


//!TestSimpleFunctionInHeaderToInClass
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
#include <iostream>

class A {
	int function();
};

inline int /*$*/A::function()/*$$*/
{
	return 0;
}
//=
#include <iostream>

class A {
	int function()
    {
        return 0;
    }

};


//!TestDefaultParameterInitializerInClassToInHeader
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
#include <iostream>

class A {
	void /*$*/member/*$$*/(int a=0, int b=0)
	{
		return;
	}
};
//=
#include <iostream>

class A {
	void member(int a=0, int b=0);
};

inline void A::member(int a, int b)
{
    return;
}


//!TestDefaultParameterInitializerInHeaderToInClass
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
#include <iostream>

class A {
	void member(int a=0, int b=0);
};

inline void /*$*/A::member/*$$*/(int a, int b)
{
	return;
}
//=
#include <iostream>

class A {
	void member(int a=0, int b=0)
    {
        return;
    }

};


//!TestTemplateFunctionInClassToInHeader
//#ch.hsr.eclipse.cdt.ui.tests.toggle.ToggleRefactoringTest
//@.config
filename=A.h
//@A.h
#include <iostream>

template <typename T>
class A {
  class B {
    T /*$*/member/*$$*/()
    {
    	return T();
    }
  };
};
//=
#include <iostream>

template <typename T>
class A {
  class B {
    T member();
  };
};

template<typename T> inline T A<T>::B::member()
{
    return T();
}


